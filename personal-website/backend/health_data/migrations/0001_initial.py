# Generated by Django 4.2.7 on 2025-08-16 02:09

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('region', models.CharField(max_length=50)),
                ('population', models.IntegerField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('air_quality_index', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('hospital_type', models.CharField(choices=[('government', 'Government Hospital'), ('private', 'Private Hospital'), ('teaching', 'Teaching Hospital'), ('clinic', 'Clinic'), ('emergency', 'Emergency Center')], max_length=20)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('icu_beds', models.IntegerField(blank=True, null=True)),
                ('emergency_services', models.BooleanField(default=True)),
                ('operating_hours', models.CharField(default='24/7', max_length=100)),
                ('specialties', models.TextField(help_text='Comma-separated list of specialties')),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospitals', to='health_data.city')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('monsoon', 'Monsoon'), ('summer', 'Summer'), ('winter', 'Winter')], max_length=20, unique=True)),
                ('start_month', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('end_month', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vaccine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('vaccine_type', models.CharField(max_length=50)),
                ('effectiveness_percentage', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('duration_months', models.IntegerField()),
                ('side_effects', models.TextField(blank=True)),
                ('contraindications', models.TextField(blank=True)),
                ('is_available', models.BooleanField(default=True)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vaccines', to='health_data.disease')),
            ],
        ),
        migrations.CreateModel(
            name='VaccinationCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('operating_hours', models.CharField(max_length=100)),
                ('appointment_required', models.BooleanField(default=False)),
                ('walk_in_available', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('available_vaccines', models.ManyToManyField(related_name='vaccination_centers', to='health_data.vaccine')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vaccination_centers', to='health_data.city')),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='health_data.hospital')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentGuideline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_type', models.CharField(choices=[('immediate', 'Immediate Treatment'), ('supportive', 'Supportive Care'), ('medication', 'Medication'), ('hospitalization', 'Hospitalization'), ('emergency', 'Emergency Care')], max_length=20)),
                ('guideline_text', models.TextField()),
                ('dosage', models.CharField(blank=True, max_length=100)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('precautions', models.TextField(blank=True)),
                ('order', models.IntegerField(default=0)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_guidelines', to='health_data.city')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_guidelines', to='health_data.disease')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_guidelines', to='health_data.season')),
            ],
            options={
                'ordering': ['order', 'treatment_type'],
                'unique_together': {('disease', 'city', 'season', 'treatment_type', 'guideline_text')},
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptom_text', models.CharField(max_length=200)),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('critical', 'Critical')], max_length=20)),
                ('is_common', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='symptoms', to='health_data.city')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='symptoms', to='health_data.disease')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='symptoms', to='health_data.season')),
            ],
            options={
                'ordering': ['order', 'symptom_text'],
                'unique_together': {('disease', 'city', 'season', 'symptom_text')},
            },
        ),
        migrations.CreateModel(
            name='PreventiveMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('personal', 'Personal Hygiene'), ('environmental', 'Environmental Safety'), ('food', 'Food Safety'), ('social', 'Social Distancing'), ('local', 'Local Specific')], max_length=20)),
                ('measure_text', models.CharField(max_length=300)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('order', models.IntegerField(default=0)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preventive_measures', to='health_data.city')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preventive_measures', to='health_data.disease')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preventive_measures', to='health_data.season')),
            ],
            options={
                'ordering': ['order', 'measure_text'],
                'unique_together': {('disease', 'city', 'season', 'measure_text')},
            },
        ),
        migrations.CreateModel(
            name='DiseaseOutbreak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_cases', models.IntegerField(default=0)),
                ('active_cases', models.IntegerField(default=0)),
                ('recovered_cases', models.IntegerField(default=0)),
                ('death_cases', models.IntegerField(default=0)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('trend', models.CharField(choices=[('decreasing', 'Decreasing'), ('stable', 'Stable'), ('increasing', 'Increasing')], max_length=20)),
                ('hotspots', models.TextField(help_text='Comma-separated list of hotspot areas')),
                ('local_factors', models.TextField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outbreaks', to='health_data.city')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outbreaks', to='health_data.disease')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outbreaks', to='health_data.season')),
            ],
            options={
                'ordering': ['-last_updated'],
                'unique_together': {('disease', 'city', 'season')},
            },
        ),
        migrations.CreateModel(
            name='CityHealthMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vaccination_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('air_quality_status', models.CharField(max_length=100)),
                ('water_safety_status', models.CharField(max_length=100)),
                ('healthcare_capacity', models.CharField(max_length=100)),
                ('emergency_response_time', models.CharField(max_length=50)),
                ('medicine_availability', models.CharField(max_length=100)),
                ('special_programs', models.TextField(blank=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_metrics', to='health_data.city')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_metrics', to='health_data.season')),
            ],
            options={
                'ordering': ['-last_updated'],
                'unique_together': {('city', 'season')},
            },
        ),
    ]
